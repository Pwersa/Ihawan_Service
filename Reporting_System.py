##### Ihawan Service - REPORTING SYSTEM #####

import mysql.connector
from xlsxwriter.workbook import Workbook
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem, QMessageBox
from Inventory_Edit_System import Ui_edit_inventory

class Ui_report(QtWidgets.QMainWindow, object):
    def connection(self):
        self.mydb = mysql.connector.connect(
            host="localhost",
            user="root",
            password="Admin123",
            database="ihawan",
        )
        self.mycursor = self.mydb.cursor()

    def setupUi(self, report):
        self.report = report
        report.setObjectName("report")
        report.setWindowModality(QtCore.Qt.ApplicationModal)
        report.resize(1068, 724)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 181, 2))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(94, 38, 15))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(141, 57, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(117, 47, 18))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(62, 25, 10))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(94, 38, 15))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 181, 2))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(94, 38, 15))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(141, 57, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(117, 47, 18))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(62, 25, 10))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(94, 38, 15))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(94, 38, 15))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(141, 57, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(117, 47, 18))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(62, 25, 10))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(94, 38, 15))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(94, 38, 15))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        report.setPalette(palette)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon/Barbecue-grill-BBQ-food-512.webp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        report.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(report)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setMinimumSize(QtCore.QSize(912, 71))
        self.frame.setMaximumSize(QtCore.QSize(16777215, 71))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout = QtWidgets.QGridLayout(self.frame)
        self.gridLayout.setObjectName("gridLayout")
        self.label_8 = QtWidgets.QLabel(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
        self.label_8.setSizePolicy(sizePolicy)
        self.label_8.setMinimumSize(QtCore.QSize(881, 51))
        self.label_8.setMaximumSize(QtCore.QSize(16777215, 51))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(229, 181, 2))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(141, 57, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(229, 181, 2))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(141, 57, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(141, 57, 23))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(47, 19, 8))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.label_8.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(24)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.gridLayout.addWidget(self.label_8, 0, 0, 1, 1)
        self.gridLayout_4.addWidget(self.frame, 0, 0, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setMinimumSize(QtCore.QSize(912, 573))
        self.frame_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.frame_3 = QtWidgets.QFrame(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setMinimumSize(QtCore.QSize(461, 560))
        self.frame_3.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.createorder_button = QtWidgets.QPushButton(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.createorder_button.sizePolicy().hasHeightForWidth())
        self.createorder_button.setSizePolicy(sizePolicy)
        self.createorder_button.setMinimumSize(QtCore.QSize(138, 23))
        self.createorder_button.setMaximumSize(QtCore.QSize(138, 23))
        self.createorder_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.createorder_button.setObjectName("createorder_button")
        self.gridLayout_2.addWidget(self.createorder_button, 2, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(290, 31))
        self.label.setMaximumSize(QtCore.QSize(16777215, 31))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 0, 0, 1, 3)
        self.inventory_table = QtWidgets.QTableWidget(self.frame_3)
        self.inventory_table.setMinimumSize(QtCore.QSize(441, 474))
        self.inventory_table.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.inventory_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.inventory_table.setObjectName("inventory_table")
        self.inventory_table.setColumnCount(4)
        self.inventory_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.inventory_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.inventory_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.inventory_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.inventory_table.setHorizontalHeaderItem(3, item)
        self.inventory_table.horizontalHeader().setVisible(True)
        self.inventory_table.horizontalHeader().setStretchLastSection(True)
        self.inventory_table.verticalHeader().setVisible(False)
        self.gridLayout_2.addWidget(self.inventory_table, 1, 0, 1, 3)
        self.edit_inventory = QtWidgets.QPushButton(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.edit_inventory.sizePolicy().hasHeightForWidth())
        self.edit_inventory.setSizePolicy(sizePolicy)
        self.edit_inventory.setMinimumSize(QtCore.QSize(138, 23))
        self.edit_inventory.setMaximumSize(QtCore.QSize(138, 23))
        self.edit_inventory.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.edit_inventory.setObjectName("edit_inventory")
        self.gridLayout_2.addWidget(self.edit_inventory, 2, 2, 1, 1)
        self.gridLayout_5.addWidget(self.frame_3, 0, 0, 1, 1)
        self.frame_5 = QtWidgets.QFrame(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_5.sizePolicy().hasHeightForWidth())
        self.frame_5.setSizePolicy(sizePolicy)
        self.frame_5.setMinimumSize(QtCore.QSize(461, 560))
        self.frame_5.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame_5)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.income_table = QtWidgets.QTableWidget(self.frame_5)
        self.income_table.setMinimumSize(QtCore.QSize(441, 474))
        self.income_table.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.income_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.income_table.setObjectName("income_table")
        self.income_table.setColumnCount(3)
        self.income_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.income_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.income_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.income_table.setHorizontalHeaderItem(2, item)
        self.income_table.horizontalHeader().setVisible(True)
        self.income_table.horizontalHeader().setHighlightSections(True)
        self.income_table.horizontalHeader().setMinimumSectionSize(100)
        self.income_table.horizontalHeader().setSortIndicatorShown(False)
        self.income_table.horizontalHeader().setStretchLastSection(True)
        self.income_table.verticalHeader().setVisible(False)
        self.income_table.verticalHeader().setHighlightSections(True)
        self.gridLayout_3.addWidget(self.income_table, 1, 0, 1, 6)
        self.label_14 = QtWidgets.QLabel(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_14.sizePolicy().hasHeightForWidth())
        self.label_14.setSizePolicy(sizePolicy)
        self.label_14.setMinimumSize(QtCore.QSize(91, 21))
        self.label_14.setMaximumSize(QtCore.QSize(120, 21))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.gridLayout_3.addWidget(self.label_14, 2, 2, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_12.sizePolicy().hasHeightForWidth())
        self.label_12.setSizePolicy(sizePolicy)
        self.label_12.setMinimumSize(QtCore.QSize(101, 21))
        self.label_12.setMaximumSize(QtCore.QSize(101, 21))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.gridLayout_3.addWidget(self.label_12, 2, 0, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_15.sizePolicy().hasHeightForWidth())
        self.label_15.setSizePolicy(sizePolicy)
        self.label_15.setMinimumSize(QtCore.QSize(73, 21))
        self.label_15.setMaximumSize(QtCore.QSize(73, 21))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(12)
        font.setItalic(True)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.gridLayout_3.addWidget(self.label_15, 2, 3, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setMinimumSize(QtCore.QSize(290, 31))
        self.label_3.setMaximumSize(QtCore.QSize(16777215, 31))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout_3.addWidget(self.label_3, 0, 0, 1, 6)
        self.label_13 = QtWidgets.QLabel(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_13.sizePolicy().hasHeightForWidth())
        self.label_13.setSizePolicy(sizePolicy)
        self.label_13.setMinimumSize(QtCore.QSize(73, 21))
        self.label_13.setMaximumSize(QtCore.QSize(100, 21))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(12)
        font.setItalic(True)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.gridLayout_3.addWidget(self.label_13, 2, 1, 1, 1)
        self.export_sales = QtWidgets.QPushButton(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.export_sales.sizePolicy().hasHeightForWidth())
        self.export_sales.setSizePolicy(sizePolicy)
        self.export_sales.setMinimumSize(QtCore.QSize(138, 23))
        self.export_sales.setMaximumSize(QtCore.QSize(138, 23))
        self.export_sales.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.export_sales.setObjectName("export_sales")
        self.gridLayout_3.addWidget(self.export_sales, 2, 5, 1, 1)
        self.gridLayout_5.addWidget(self.frame_5, 0, 1, 1, 1)
        self.gridLayout_4.addWidget(self.frame_2, 1, 0, 1, 2)
        self.waiting_label_3 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.waiting_label_3.sizePolicy().hasHeightForWidth())
        self.waiting_label_3.setSizePolicy(sizePolicy)
        self.waiting_label_3.setMinimumSize(QtCore.QSize(251, 21))
        self.waiting_label_3.setMaximumSize(QtCore.QSize(16777215, 21))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.waiting_label_3.setFont(font)
        self.waiting_label_3.setObjectName("waiting_label_3")
        self.gridLayout_4.addWidget(self.waiting_label_3, 2, 0, 1, 1)
        self.waiting_label_4 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.waiting_label_4.sizePolicy().hasHeightForWidth())
        self.waiting_label_4.setSizePolicy(sizePolicy)
        self.waiting_label_4.setMinimumSize(QtCore.QSize(131, 21))
        self.waiting_label_4.setMaximumSize(QtCore.QSize(131, 21))
        font = QtGui.QFont()
        font.setFamily("Rockwell")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.waiting_label_4.setFont(font)
        self.waiting_label_4.setObjectName("waiting_label_4")
        self.gridLayout_4.addWidget(self.waiting_label_4, 2, 1, 1, 1)
        self.edit_inventory_2 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.edit_inventory_2.sizePolicy().hasHeightForWidth())
        self.edit_inventory_2.setSizePolicy(sizePolicy)
        self.edit_inventory_2.setMinimumSize(QtCore.QSize(138, 23))
        self.edit_inventory_2.setMaximumSize(QtCore.QSize(138, 23))
        self.edit_inventory_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.edit_inventory_2.setObjectName("edit_inventory_2")
        self.gridLayout_4.addWidget(self.edit_inventory_2, 3, 0, 1, 1)
        self.reset_sales = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.reset_sales.sizePolicy().hasHeightForWidth())
        self.reset_sales.setSizePolicy(sizePolicy)
        self.reset_sales.setMinimumSize(QtCore.QSize(138, 23))
        self.reset_sales.setMaximumSize(QtCore.QSize(138, 23))
        self.reset_sales.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.reset_sales.setObjectName("reset_sales")
        self.gridLayout_4.addWidget(self.reset_sales, 3, 1, 1, 1)
        report.setCentralWidget(self.centralwidget)

        self.retranslateUi(report)
        QtCore.QMetaObject.connectSlotsByName(report)

        self.reset = []

        ################### Stretch columns in inventory_table #################
        header = self.inventory_table.horizontalHeader()
        header.setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)

        header1 = self.income_table.horizontalHeader()
        header1.setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        header1.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)

        ################### Buttons Connection #######################

        self.createorder_button.clicked.connect(self.order_inventory)
        self.edit_inventory.clicked.connect(self.editINV)
        self.edit_inventory_2.clicked.connect(self.refreshtable2)
        self.reset_sales.clicked.connect(self.resetsales)
        self.export_sales.clicked.connect(self.export1)
        ################### Call database functions #######################
        self.connection()
        self.displayInventory()
        self.displayTransaction()

    def retranslateUi(self, report):
        _translate = QtCore.QCoreApplication.translate
        report.setWindowTitle(_translate("report", "Reporting System - IHAWAN SERVICE"))
        self.label_8.setText(_translate("report", "<html><head/><body><p align=\"center\"><span style=\" font-size:36pt;\">&quot;REPORTING SYSTEM&quot;</span></p></body></html>"))
        self.createorder_button.setText(_translate("report", "Export Inventory"))
        self.label.setText(_translate("report", "<html><head/><body><p align=\"center\">INVENTORY</p></body></html>"))
        item = self.inventory_table.horizontalHeaderItem(0)
        item.setText(_translate("report", "Product Name"))
        item = self.inventory_table.horizontalHeaderItem(1)
        item.setText(_translate("report", "Stocks Left"))
        item = self.inventory_table.horizontalHeaderItem(2)
        item.setText(_translate("report", "Price"))
        item = self.inventory_table.horizontalHeaderItem(3)
        item.setText(_translate("report", "Cooking Time (MM)"))
        self.edit_inventory.setText(_translate("report", "Edit Inventory"))
        item = self.income_table.horizontalHeaderItem(0)
        item.setText(_translate("report", "Product Name"))
        item = self.income_table.horizontalHeaderItem(1)
        item.setText(_translate("report", "Quantity"))
        item = self.income_table.horizontalHeaderItem(2)
        item.setText(_translate("report", "Total Price of the Product"))
        self.label_14.setText(_translate("report", "<html><head/><body><p>Products sold:</p></body></html>"))
        self.label_12.setText(_translate("report", "Total Sales:"))
        self.label_15.setText(_translate("report", "0"))
        self.label_3.setText(_translate("report", "<html><head/><body><p align=\"center\">TOTAL SALES</p></body></html>"))
        self.label_13.setText(_translate("report", "0000.00 "))
        self.export_sales.setText(_translate("report", "Export Total Sales"))
        self.waiting_label_3.setText(_translate("report", "<html><head/><body><p><span style=\" font-size:11pt;\">Data not loading correctly? Click this button:</span></p></body></html>"))
        self.waiting_label_4.setText(_translate("report", "<html><head/><body><p><span style=\" font-size:11pt;\">Reset Total Sales:</span></p></body></html>"))
        self.edit_inventory_2.setText(_translate("report", "Refresh"))
        self.reset_sales.setText(_translate("report", "Reset"))


############################## SHORCUT KEYS ###############################
        self.edit_inventory.setShortcut("Ctrl+I")
        self.createorder_button.setShortcut("Ctrl+O")
        self.edit_inventory_2.setShortcut("Ctrl+F")
# FUNCTIONS


    def order_inventory(self):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Information)
        msg.setWindowTitle("Inventory")
        msg.setText("Inventory has been exported.")
        msg.exec_()

        self.connection()

        self.mycursor.execute("SELECT * FROM inventory")
        self.result = self.mycursor.fetchall()

        workbook = Workbook("Ihawan_Service_Inventory_Report.csv")
        sheet = workbook.add_worksheet()
        for r, row in enumerate(self.result):
            for c, col in enumerate(row):
                sheet.write(r, c, col)

        workbook.close()



    def editINV(self):
        msg3 = QMessageBox()
        msg3.setIcon(QMessageBox.Information)
        msg3.setWindowTitle("Opening window...")
        msg3.setText("Inventory Edit Window will open")
        msg3.exec_()


        self.window = QtWidgets.QMainWindow()
        self.window = closeWindow()
        self.ui = Ui_edit_inventory()
        self.ui.setupUi(self.window)
        self.window.show()

        #self.displayInventory()
        #self.displayTransaction()

    def displayInventory(self):

        self.connection()

        self.mycursor.execute("SELECT DISTINCT productname FROM inventory")
        self.result = self.mycursor.fetchall()
        print(self.result)
        self.column = [item[0] for item in self.result]

        if len(self.column) == 0:
            msg2 = QMessageBox()
            msg2.setIcon(QMessageBox.Information)
            msg2.setWindowTitle("Empty Data")
            msg2.setText(
                "Inventory table is empty, please add some products. ")
            msg2.exec_()

        else:
            self.mycursor.execute("SELECT * FROM inventory")
            self.result = self.mycursor.fetchall()
            self.column = [item[0] for item in self.result]
            self.numcols = len(self.result[0])
            self.numrows = len(self.result)

            self.inventory_table.setColumnCount(self.numcols)
            self.inventory_table.setRowCount(self.numrows)
            for row in range(self.numrows):
                for column in range(self.numcols):
                    self.inventory_table.setItem(row, column, QTableWidgetItem(str(self.result[row][column])))


        print("Inventory has been Loaded")

    def displayTransaction(self):
        self.connection()

        self.mycursor.execute("SELECT DISTINCT products FROM transaction")
        self.result1 = self.mycursor.fetchall()
        self.column1 = [item[0] for item in self.result1]

        if len(self.column1) == 0:
            msg2 = QMessageBox()
            msg2.setIcon(QMessageBox.Information)
            msg2.setWindowTitle("Empty Data")
            msg2.setText(
                "Transaction table is empty, please start taking some orders. ")
            msg2.exec_()

        else:
            self.mycursor.execute("SELECT * FROM transaction")
            self.result = self.mycursor.fetchall()
            self.column = [item[0] for item in self.result]
            self.numcols = len(self.result[0])
            self.numrows = len(self.result)

            self.income_table.setColumnCount(self.numcols)
            self.income_table.setRowCount(self.numrows)

            for row in range(self.numrows):
                for column in range(self.numcols):
                    self.income_table.setItem(row, column, QTableWidgetItem(str(self.result[row][column])))


            self.mycursor.execute("SELECT SUM(individualprices) FROM transaction")
            self.totalsales = self.mycursor.fetchall()
            self.totalsales1 =[item[0] for item in self.totalsales]
            self.label_13.setText(str(self.totalsales1[0]))

            self.mycursor.execute("SELECT SUM(quantities) FROM transaction")
            self.totalbuys = self.mycursor.fetchall()
            self.totalbuys1 = [item[0] for item in self.totalbuys]
            self.label_15.setText(str(self.totalbuys1[0]))

            print("Transaction has been Loaded")

    def refreshtable2(self):

        msg3 = QMessageBox()
        msg3.setIcon(QMessageBox.Information)
        msg3.setWindowTitle("Reporting System")
        msg3.setText("Window has been refreshed.")
        msg3.exec_()

        self.displayInventory()
        self.displayTransaction()

    def resetsales(self):
        reply = QMessageBox.question(self, 'Total Sales', 'Are you sure you want to reset Total Sales? ',
                                     QMessageBox.Yes | QMessageBox.No, QMessageBox.No)

        if reply == QMessageBox.Yes:
            self.connection()
            self.mycursor.execute("SELECT DISTINCT products FROM transaction")
            self.result10 = self.mycursor.fetchall()
            self.column1 = [item[0] for item in self.result10]

            for i in self.column1:
                self.reset.insert(0, i)

            if len(self.column1) == 0:
                QMessageBox.information(self, 'Total Sales', 'Total Sales is empty, resetting Total Sales cancelled.')

            else:

                while len(self.reset) > 0:
                    self.connection()
                    sql = "DELETE FROM transaction WHERE products = %s"
                    values = (self.reset[0],)
                    self.mycursor.execute(sql, values)
                    self.mydb.commit()
                    self.reset.pop(0)
                    self.income_table.setRowCount(0)

                QMessageBox.information(self, 'Total Sales', 'Total Sales has been reset. ')


        else:
            QMessageBox.information(self, 'Total Sales', 'Resetting Total Sales has been cancelled. ')

    def answer1(self):
        if i.text() == '&Yes':
            msg2 = QMessageBox()
            msg2.setIcon(QMessageBox.Information)
            msg2.setWindowTitle("First Start")
            msg2.setText("Great!, Let's start")
            msg2.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
            msg2.exec_()
            self.preloaddata()
        if i.text() == '&No':
            msg2 = QMessageBox()
            msg2.setIcon(QMessageBox.Information)
            msg2.setWindowTitle("First Start")
            msg2.setText("Great!, Let's start")
            msg2.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
            msg2.exec_()

    def export1(self):
        self.connection()

        self.mycursor.execute("SELECT DISTINCT products FROM transaction")
        self.result = self.mycursor.fetchall()
        self.column1 = [item[0] for item in self.result]

        if len(self.column1) == 0:

            msg2 = QMessageBox()
            msg2.setIcon(QMessageBox.Information)
            msg2.setWindowTitle("Total Sales")
            msg2.setText("Nothing to export.")
            msg2.exec_()

        else:

            self.mycursor.execute("SELECT * FROM transaction")
            self.result1 = self.mycursor.fetchall()

            workbook = Workbook("Ihawan_Service_Sales_Report.csv")
            sheet = workbook.add_worksheet()
            for r, row in enumerate(self.result1):
                for c, col in enumerate(row):
                    sheet.write(r, c, col)

            workbook.close()

            msg2 = QMessageBox()
            msg2.setIcon(QMessageBox.Information)
            msg2.setWindowTitle("Total Sales")
            msg2.setText("Total sales has been exported. ")
            msg2.exec_()

class closeWindow(QtWidgets.QMainWindow):
    def closeEvent(self, event):
        reply = QMessageBox.question(self, 'Reporting System', 'Are you sure you want to exit?',
                                     QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
        if reply == QMessageBox.Yes:
            event.accept()

        else:
            event.ignore()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    report = QtWidgets.QMainWindow()
    report = closeWindow()
    ui = Ui_report()
    ui.setupUi(report)
    report.show()
    sys.exit(app.exec_())
